// Code generated by /gen. DO NOT EDIT.

package proxy

// ParamsSpecs returns a map relating method names to the associated (ordered) list of parameters.
func ParamsSpecs() map[string]ParamsSpec {
	return map[string]ParamsSpec{
		"debug_getBadBlocks": {
			order:    []string{},
			required: map[string]struct{}{},
		},
		"debug_getRawBlock": {
			order:    []string{"block"},
			required: map[string]struct{}{"block": struct{}{}},
		},
		"debug_getRawHeader": {
			order:    []string{"block"},
			required: map[string]struct{}{"block": struct{}{}},
		},
		"debug_getRawReceipts": {
			order:    []string{"block"},
			required: map[string]struct{}{"block": struct{}{}},
		},
		"debug_getRawTransaction": {
			order:    []string{"transaction_hash"},
			required: map[string]struct{}{"transaction_hash": struct{}{}},
		},
		"engine_exchangeCapabilities": {
			order:    []string{"consensus_client_methods"},
			required: map[string]struct{}{"consensus_client_methods": struct{}{}},
		},
		"engine_exchangeTransitionConfigurationV1": {
			order:    []string{"consensus_client_configuration"},
			required: map[string]struct{}{"consensus_client_configuration": struct{}{}},
		},
		"engine_forkchoiceUpdatedV1": {
			order:    []string{"forkchoice_state", "payload_attributes"},
			required: map[string]struct{}{"forkchoice_state": struct{}{}},
		},
		"engine_forkchoiceUpdatedV2": {
			order:    []string{"forkchoice_state", "payload_attributes"},
			required: map[string]struct{}{"forkchoice_state": struct{}{}},
		},
		"engine_forkchoiceUpdatedV3": {
			order:    []string{"forkchoice_state", "payload_attributes"},
			required: map[string]struct{}{"forkchoice_state": struct{}{}},
		},
		"engine_getBlobsV1": {
			order:    []string{"blob_versioned_hashes"},
			required: map[string]struct{}{"blob_versioned_hashes": struct{}{}},
		},
		"engine_getBlobsV2": {
			order:    []string{"blob_versioned_hashes"},
			required: map[string]struct{}{"blob_versioned_hashes": struct{}{}},
		},
		"engine_getPayloadBodiesByHashV1": {
			order:    []string{"array_of_block_hashes"},
			required: map[string]struct{}{"array_of_block_hashes": struct{}{}},
		},
		"engine_getPayloadBodiesByRangeV1": {
			order: []string{"starting_block_number", "number_of_blocks_to_return"},
			required: map[string]struct{}{
				"number_of_blocks_to_return": struct{}{},
				"starting_block_number":      struct{}{},
			},
		},
		"engine_getPayloadV1": {
			order:    []string{"payload_id"},
			required: map[string]struct{}{"payload_id": struct{}{}},
		},
		"engine_getPayloadV2": {
			order:    []string{"payload_id"},
			required: map[string]struct{}{"payload_id": struct{}{}},
		},
		"engine_getPayloadV3": {
			order:    []string{"payload_id"},
			required: map[string]struct{}{"payload_id": struct{}{}},
		},
		"engine_getPayloadV4": {
			order:    []string{"payload_id"},
			required: map[string]struct{}{"payload_id": struct{}{}},
		},
		"engine_getPayloadV5": {
			order:    []string{"payload_id"},
			required: map[string]struct{}{"payload_id": struct{}{}},
		},
		"engine_newPayloadV1": {
			order:    []string{"execution_payload"},
			required: map[string]struct{}{"execution_payload": struct{}{}},
		},
		"engine_newPayloadV2": {
			order:    []string{"execution_payload"},
			required: map[string]struct{}{"execution_payload": struct{}{}},
		},
		"engine_newPayloadV3": {
			order: []string{"execution_payload", "expected_blob_versioned_hashes", "root_of_the_parent_beacon_block"},
			required: map[string]struct{}{
				"execution_payload":               struct{}{},
				"expected_blob_versioned_hashes":  struct{}{},
				"root_of_the_parent_beacon_block": struct{}{},
			},
		},
		"engine_newPayloadV4": {
			order: []string{"execution_payload", "expected_blob_versioned_hashes", "root_of_the_parent_beacon_block", "execution_requests"},
			required: map[string]struct{}{
				"execution_payload":               struct{}{},
				"execution_requests":              struct{}{},
				"expected_blob_versioned_hashes":  struct{}{},
				"root_of_the_parent_beacon_block": struct{}{},
			},
		},
		"eth_accounts": {
			order:    []string{},
			required: map[string]struct{}{},
		},
		"eth_blobBaseFee": {
			order:    []string{},
			required: map[string]struct{}{},
		},
		"eth_blockNumber": {
			order:    []string{},
			required: map[string]struct{}{},
		},
		"eth_call": {
			order:    []string{"transaction", "block"},
			required: map[string]struct{}{"transaction": struct{}{}},
		},
		"eth_chainId": {
			order:    []string{},
			required: map[string]struct{}{},
		},
		"eth_coinbase": {
			order:    []string{},
			required: map[string]struct{}{},
		},
		"eth_createAccessList": {
			order:    []string{"transaction", "block"},
			required: map[string]struct{}{"transaction": struct{}{}},
		},
		"eth_estimateGas": {
			order:    []string{"transaction", "block"},
			required: map[string]struct{}{"transaction": struct{}{}},
		},
		"eth_feeHistory": {
			order: []string{"blockcount", "newestblock", "rewardpercentiles"},
			required: map[string]struct{}{
				"blockcount":        struct{}{},
				"newestblock":       struct{}{},
				"rewardpercentiles": struct{}{},
			},
		},
		"eth_gasPrice": {
			order:    []string{},
			required: map[string]struct{}{},
		},
		"eth_getBalance": {
			order: []string{"address", "block"},
			required: map[string]struct{}{
				"address": struct{}{},
				"block":   struct{}{},
			},
		},
		"eth_getBlockByHash": {
			order: []string{"block_hash", "hydrated_transactions"},
			required: map[string]struct{}{
				"block_hash":            struct{}{},
				"hydrated_transactions": struct{}{},
			},
		},
		"eth_getBlockByNumber": {
			order: []string{"block", "hydrated_transactions"},
			required: map[string]struct{}{
				"block":                 struct{}{},
				"hydrated_transactions": struct{}{},
			},
		},
		"eth_getBlockReceipts": {
			order:    []string{"block"},
			required: map[string]struct{}{"block": struct{}{}},
		},
		"eth_getBlockTransactionCountByHash": {
			order:    []string{"block_hash"},
			required: map[string]struct{}{},
		},
		"eth_getBlockTransactionCountByNumber": {
			order:    []string{"block"},
			required: map[string]struct{}{},
		},
		"eth_getCode": {
			order: []string{"address", "block"},
			required: map[string]struct{}{
				"address": struct{}{},
				"block":   struct{}{},
			},
		},
		"eth_getFilterChanges": {
			order:    []string{"filter_identifier"},
			required: map[string]struct{}{"filter_identifier": struct{}{}},
		},
		"eth_getFilterLogs": {
			order:    []string{"filter_identifier"},
			required: map[string]struct{}{"filter_identifier": struct{}{}},
		},
		"eth_getLogs": {
			order:    []string{"filter"},
			required: map[string]struct{}{"filter": struct{}{}},
		},
		"eth_getProof": {
			order: []string{"address", "storagekeys", "block"},
			required: map[string]struct{}{
				"address":     struct{}{},
				"block":       struct{}{},
				"storagekeys": struct{}{},
			},
		},
		"eth_getStorageAt": {
			order: []string{"address", "storage_slot", "block"},
			required: map[string]struct{}{
				"address":      struct{}{},
				"block":        struct{}{},
				"storage_slot": struct{}{},
			},
		},
		"eth_getTransactionByBlockHashAndIndex": {
			order: []string{"block_hash", "transaction_index"},
			required: map[string]struct{}{
				"block_hash":        struct{}{},
				"transaction_index": struct{}{},
			},
		},
		"eth_getTransactionByBlockNumberAndIndex": {
			order: []string{"block", "transaction_index"},
			required: map[string]struct{}{
				"block":             struct{}{},
				"transaction_index": struct{}{},
			},
		},
		"eth_getTransactionByHash": {
			order:    []string{"transaction_hash"},
			required: map[string]struct{}{"transaction_hash": struct{}{}},
		},
		"eth_getTransactionCount": {
			order: []string{"address", "block"},
			required: map[string]struct{}{
				"address": struct{}{},
				"block":   struct{}{},
			},
		},
		"eth_getTransactionReceipt": {
			order:    []string{"transaction_hash"},
			required: map[string]struct{}{"transaction_hash": struct{}{}},
		},
		"eth_getUncleCountByBlockHash": {
			order:    []string{"block_hash"},
			required: map[string]struct{}{},
		},
		"eth_getUncleCountByBlockNumber": {
			order:    []string{"block"},
			required: map[string]struct{}{},
		},
		"eth_maxPriorityFeePerGas": {
			order:    []string{},
			required: map[string]struct{}{},
		},
		"eth_newBlockFilter": {
			order:    []string{},
			required: map[string]struct{}{},
		},
		"eth_newFilter": {
			order:    []string{"filter"},
			required: map[string]struct{}{"filter": struct{}{}},
		},
		"eth_newPendingTransactionFilter": {
			order:    []string{},
			required: map[string]struct{}{},
		},
		"eth_sendRawTransaction": {
			order:    []string{"transaction"},
			required: map[string]struct{}{"transaction": struct{}{}},
		},
		"eth_sendTransaction": {
			order:    []string{"transaction"},
			required: map[string]struct{}{"transaction": struct{}{}},
		},
		"eth_sign": {
			order: []string{"address", "message"},
			required: map[string]struct{}{
				"address": struct{}{},
				"message": struct{}{},
			},
		},
		"eth_signTransaction": {
			order:    []string{"transaction"},
			required: map[string]struct{}{"transaction": struct{}{}},
		},
		"eth_simulateV1": {
			order:    []string{"payload", "block_tag"},
			required: map[string]struct{}{"payload": struct{}{}},
		},
		"eth_syncing": {
			order:    []string{},
			required: map[string]struct{}{},
		},
		"eth_uninstallFilter": {
			order:    []string{"filter_identifier"},
			required: map[string]struct{}{"filter_identifier": struct{}{}},
		},
	}
}
